// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int     @id @default(autoincrement())
  matricula String  @unique
  senha     String
  
  // Relacionamento com movimentações
  movimentacoes MovimentacaoEstoque[]
}

model Fluxo {
  id          Int     @id @default(autoincrement())
  motoristaId Int
  veiculoId   String
  iniciadoEm  DateTime @default(now())
}

model Estoque {
  id          Int      @id @default(autoincrement())
  produto     String
  quantidade  Int
  unidade     String
  localizacao String?
  criadoEm    DateTime @default(now())
  atualizadoEm DateTime @updatedAt
  
  // Relacionamento com movimentações
  movimentacoes MovimentacaoEstoque[]
}

model MovimentacaoEstoque {
  id          Int      @id @default(autoincrement())
  estoqueId   Int
  tipo        String   // "ENTRADA" ou "SAIDA"
  quantidade  Int
  motivo      String   // "COMPRA", "VENDA", "AJUSTE", "PERDA", etc.
  observacao  String?
  responsavelId Int    // ID do usuário que fez a movimentação
  dataMovimentacao DateTime @default(now())
  
  // Relacionamentos
  estoque     Estoque  @relation(fields: [estoqueId], references: [id])
  responsavel User     @relation(fields: [responsavelId], references: [id])
}
